<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:lcb="clr-namespace:BlizzardWind.Desktop.Controls.Buttons;assembly=BlizzardWind.Desktop.Controls">

    <HierarchicalDataTemplate x:Key="HeadlineTreeTemplate" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal">
            <!--<TextBlock Text="{Binding TypeName}" Margin="3,0,0,0" Foreground="{StaticResource Color.Info}"/>
                 <TextBlock Text=" - " Foreground="{StaticResource Color.Info}"/>-->
            <TextBlock Text="{Binding Name}"/>
        </StackPanel>
    </HierarchicalDataTemplate>

    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{StaticResource Color.Font.Primary}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}" UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid Margin="{TemplateBinding Margin}" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="18" Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="ExpanderBtn" ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border>
                                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <ToggleButton.Content>
                                        <TextBlock x:Name="ExpanderIcon"  Foreground="{StaticResource Color.Info}" 
                                                   Text="&#xe5df;" 
                                                   FontFamily="{StaticResource Font.MaterialIcon}"
                                                   FontSize="25" />
                                    </ToggleButton.Content>
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter Margin="18,0,0,0" x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderIcon" Property="Text" Value="&#xe5c5;" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="ExpanderIcon" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Warn}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Warn}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource Color.Second}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewStyle" TargetType="TreeView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource HeadlineTreeTemplate}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    
    <Style x:Key="ListOperateButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CommonOperateButtonStyle}">
        <Setter Property="Width" Value="50"/>
    </Style>

    <DataTemplate x:Key="NoteCardDataTemplate">
        <lcb:NoteCard Margin="10" Height="250" Width="200"
                      Title="{Binding Title}" Keys="{Binding Keys}"
                      Time="{Binding DisplayTime}" FontCount="{Binding ContentLength}"
                      Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType=Page}}">
            <lcb:NoteCard.CoverImage>
                <MultiBinding Converter="{StaticResource NoteCoverPathToUriConverter}" Mode="OneWay">
                    <Binding  Path="CoverPicturePath" UpdateSourceTrigger="PropertyChanged"/>
                    <Binding  Path="CoverPictureKey" UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </lcb:NoteCard.CoverImage>
            <lcb:NoteCard.ContextMenu>
                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                             Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Header="查看" Command="{Binding NoteSeeCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="编辑" Command="{Binding NoteEditCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="移动" Command="{Binding NoteMoveCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="修改封面" Command="{Binding NoteUploadCoverCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="删除" Command="{Binding NoteDeleteCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                </ContextMenu>
            </lcb:NoteCard.ContextMenu>
        </lcb:NoteCard>
    </DataTemplate>

    <Style x:Key="NoteItemsStyle" TargetType="ItemsControl">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>