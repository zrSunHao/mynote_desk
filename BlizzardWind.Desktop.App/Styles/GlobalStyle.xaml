<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--#region 颜色-->
    <SolidColorBrush x:Key="Color.Windows.Background" Color="#2D2D30"/>
    <SolidColorBrush x:Key="Color.Canvas.Background" Color="#1E1E1E"/>
    
    <SolidColorBrush x:Key="Color.Primary" Color="#059669"/>
    <SolidColorBrush x:Key="Color.Second" Color="#f14479"/>
    <SolidColorBrush x:Key="Color.Tertiary" Color="White"/>
    
    <SolidColorBrush x:Key="Color.Font.Primary" Color="Gray"/>
    <SolidColorBrush x:Key="Color.Font.Second" Color="#f14479"/>
    <SolidColorBrush x:Key="Color.Font.Tertiary" Color="White"/>
    <SolidColorBrush x:Key="Color.Font.Active" Color="Orange"/>
    
    <SolidColorBrush x:Key="Color.Info" Color="#0fa3e3"/>
    <SolidColorBrush x:Key="Color.Warn" Color="#F59E0B"/>
    <SolidColorBrush x:Key="Color.Error" Color="#DC2626"/>

    <Color x:Key="Text.Color.Primary">#059669</Color>
    <Color x:Key="Text.Color.Second">#f14479</Color>
    <Color x:Key="Text.Color.Tertiary">#ffffff</Color>
    <!--#endregion 颜色-->

    <!--#region 字体-->
    <FontFamily x:Key="Font.MaterialIcon">pack://application:,,,/Assets/Fonts/#Material Icons</FontFamily>
    <!--#endregion 字体-->

    <!--#region 按钮-->
    <Style x:Key="TransparentButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion 按钮-->
    
    <!--#region window-->
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Height" Value="632"/>
        <Setter Property="Width" Value="1024"/>
        <Setter Property="MinHeight" Value="632"/>
        <Setter Property="MinWidth" Value="1024"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="WindowGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource Color.Windows.Background}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="Margin" Value="7,7,7,50"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowTopBarGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="#333E46"/>
    </Style>

    <Style x:Key="WindowTitleIconStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontFamily" Value="{StaticResource Font.MaterialIcon}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Primary}"/>
    </Style>

    <Style x:Key="WindowTitleTextStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Primary}"/>
    </Style>

    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Font.Tertiary}"/>
        <Setter Property="FontFamily" Value="{StaticResource Font.MaterialIcon}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource Color.Font.Tertiary}"/>
                            <Setter Property="Background" Value="{StaticResource Color.Primary}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowRestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Setter Property="Content" Value="&#xe5d0;"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="Content" Value="&#xe5d1;"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsMouseCaptured" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Color.Error}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Color.Error}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion window-->


</ResourceDictionary>