<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lcc="clr-namespace:BlizzardWind.Desktop.Controls.Converters;assembly=BlizzardWind.Desktop.Controls">

    <lcc:FamilyPageWidthToColumsConverter x:Key="WidthToColumsConverter"/>

    <Style x:Key="FamilyOperateButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CommonOperateButtonStyle}">
        <Setter Property="Width" Value="70"/>
    </Style>

    <DataTemplate x:Key="FamilyDataTemplate">
        <RadioButton Style="{DynamicResource FamilyBarRadioStyle}" Width="240" Height="40"
                     Content="{Binding Name}"
                     Background="{StaticResource Color.Primary}"
                     ToolTipService.InitialShowDelay="1000"
                     ToolTipService.BetweenShowDelay="200"
                     Command="{Binding DataContext.SelectedFamilyCommand,RelativeSource={RelativeSource AncestorType=Page}}"
                     CommandParameter="{Binding}"
                     Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType=Page}}">
            <RadioButton.ContextMenu>
                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                             Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Header="重命名" Command="{Binding EditFamilyCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="删除" Command="{Binding DeleteFamilyCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                </ContextMenu>
            </RadioButton.ContextMenu>
            <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource IDToRadioCheckedConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding Path="Id"></Binding>
                    <Binding Path="DataContext.FamilyId" RelativeSource="{RelativeSource AncestorType=Page}"></Binding>
                </MultiBinding>
            </RadioButton.IsChecked>
            <RadioButton.ToolTip>
                <ToolTip Background="{StaticResource Color.Canvas.Background}">
                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Color.Font.Primary}"/>
                </ToolTip>
            </RadioButton.ToolTip>
        </RadioButton>
    </DataTemplate>

    <Style x:Key="FolderCardButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Font.Primary}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Background="Black" BorderBrush="Transparent" Opacity="0.1" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="40"/>
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0" Height="65" Width="70"
                               Stretch="UniformToFill" Source="/Assets/Images/Icons/folder.png"/>
                            <Image Stretch="UniformToFill" Grid.Row="0" Margin="0,24,0,0" Height="36" Width="55">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource FolderCoverPathToUriConverter}" Mode="OneWay">
                                        <Binding  Path="CoverPicturePath" UpdateSourceTrigger="PropertyChanged"></Binding>
                                        <Binding  Path="CoverPictureKey" UpdateSourceTrigger="PropertyChanged"></Binding>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <Border Grid.Row="0" Background="Black" Opacity="0.3"/>
                            <TextBlock x:Name="folder_Name" Grid.Row="1" Margin="10,5,10,0" Text="{Binding Content,ElementName=contentPresenter}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"
                                       TextWrapping="Wrap"
                                       Width="{TemplateBinding Width}"
                                       TextTrimming="CharacterEllipsis"/>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Visibility="Hidden"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="folder_Name" Value="{StaticResource Color.Warn}"/>
                            <Setter Property="Background" TargetName="border" Value="Black"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="folder_Name" Value="{StaticResource Color.Second}"/>
                            <Setter Property="Background" TargetName="border" Value="Black"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" TargetName="folder_Name" Value="Black"/>
                            <Setter Property="Background" TargetName="border" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FolderCardDataTemplate">
        <Button Style="{DynamicResource FolderCardButtonStyle}" 
                Content="{Binding Name}"
                Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType=Page}}">
            <Button.ContextMenu>
                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                             Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Header="编辑" Command="{Binding EdiFolderCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="更改封面" Command="{Binding FolderUploadCoverCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                    <MenuItem Header="删除" Command="{Binding DeleteFolderCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              Style="{StaticResource ContextMenuItemStyle}"/>
                </ContextMenu>
            </Button.ContextMenu>
            <Button.ToolTip>
                <ToolTip Background="{StaticResource Color.Canvas.Background}">
                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Color.Font.Primary}"/>
                </ToolTip>
            </Button.ToolTip>
        </Button>
    </DataTemplate>

    <Style x:Key="FolderItemsStyle" TargetType="ItemsControl">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding ActualWidth,Converter={StaticResource WidthToColumsConverter},RelativeSource={RelativeSource AncestorType={x:Type Page}}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>