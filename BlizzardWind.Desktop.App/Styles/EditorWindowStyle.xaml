<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lci="clr-namespace:BlizzardWind.Desktop.Controls.Images;assembly=BlizzardWind.Desktop.Controls"
                    xmlns:lcc="clr-namespace:BlizzardWind.Desktop.Controls.Converters;assembly=BlizzardWind.Desktop.Controls"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style x:Key="OperateItemsStyle" TargetType="ItemsControl">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OperateButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TransparentButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource Color.Info}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,0,15,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground"  Value="{StaticResource Color.Warn}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground"  Value="{StaticResource Color.Second}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="MainOperateItemsTemplate">
        <Button Style="{StaticResource OperateButtonStyle}"
                Content="{Binding Name}"
                Command="{Binding DataContext.MainOperateCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                CommandParameter="{Binding Type}"/>
    </DataTemplate>

    <DataTemplate x:Key="UploadOperateItemsTemplate">
        <Button Style="{StaticResource OperateButtonStyle}"
                Content="{Binding Name}"
                Command="{Binding DataContext.MainUploadCommand,RelativeSource={RelativeSource AncestorType=Window}}" 
                CommandParameter="{Binding Type}"/>
    </DataTemplate>

    <HierarchicalDataTemplate x:Key="HeadlineTreeTemplate" ItemsSource="{Binding Children}">
        <StackPanel>
            <TextBlock Text="{Binding Name}"/>
        </StackPanel>
    </HierarchicalDataTemplate>

    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="Silver" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}" UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid Margin="{TemplateBinding Margin}" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="18" Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="ExpanderBtn" ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border>
                                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <ToggleButton.Content>
                                        <TextBlock x:Name="ExpanderIcon"  Foreground="{StaticResource Color.Info}" 
                                                   Text="&#xe5df;" 
                                                   FontFamily="{StaticResource Font.MaterialIcon}"
                                                   FontSize="25" />
                                    </ToggleButton.Content>
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter Margin="18,0,0,0" x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderIcon" Property="Text" Value="&#xe5c5;" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="ExpanderIcon" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Warn}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Warn}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource Color.Second}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewStyle" TargetType="TreeView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource HeadlineTreeTemplate}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <Style x:Key="EditorTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.Primary}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Primary}"/>
        <Setter Property="CaretBrush" Value="{StaticResource Color.Second}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="TextBlock.LineHeight" Value="25"/>
        <Setter Property="TextBlock.LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Primary}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource Color.Font.Primary}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BarTextStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Info}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style x:Key="CommonTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Info}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="SelectionBrush" Value="LightGray"/>
        <Setter Property="CaretBrush" Value="{StaticResource Color.Second}"/>
    </Style>

    <Style x:Key="SearchImageBoxStyle" TargetType="TextBox" BasedOn="{StaticResource CommonTextBoxStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="PlaceHolder"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="搜索······"
                                       Padding="7,0"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Visibility="Collapsed"/>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Grid.Column="1"
                                          Margin="5,0" 
                                          Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PlaceHolder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="PlaceHolder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Color.Info}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Primary}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="MinHeight" Value="22"></Setter>
        <Setter Property="MinWidth" Value="60"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Back" Background="#424242"  BorderThickness="0,0,0,0" BorderBrush="#424242" >
                        <ContentPresenter ContentSource="{Binding Source,TargetNullValue={x:Null}}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Font.Second}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Font.Second}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="Gray" BorderThickness="0" />
            <Border Grid.Column="0" Margin="1"  Background="Transparent"  BorderBrush="Gray" BorderThickness="0,0,2,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource Color.Primary}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 8 8 L 16 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource Color.Second}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource Color.Second}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
        <Grid>
            <ToggleButton Grid.Column="2" Focusable="false" Template="{StaticResource ComboBoxToggleButtonTemplate}"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                     VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder" Background="Transparent" />
                    <ScrollViewer SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
    </ControlTemplate>

    <Style x:Key="FileTypeOptionBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Info}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    
    <Style x:Key="RectBorderStyle" TargetType="Rectangle">
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Stroke" Value="{StaticResource Color.Primary}"/>
        <Setter Property="StrokeDashArray" Value="2"/>
        <Setter Property="StrokeThickness" Value="3"/>
        <Setter Property="StrokeDashCap" Value="Round"/>
        <Setter Property="Fill" Value="Transparent"/>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
    </Style>

    <Style x:Key="CoverImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="UniformToFill"/>
        <Setter Property="Margin" Value="5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CoverPicture}" Value="{x:Null}">
                <Setter Property="Source" Value="/Assets/Images/User.jpeg"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <lcc:TextToUriConverter x:Key="TextToUriConverter"/>
    <DataTemplate x:Key="MarkImageInfoItemsTemplate">
        <lci:MarkImageInfo Margin="5,0,5,5" IconFontFamily="{StaticResource Font.MaterialIcon}"
                           FileName="{Binding FileName}"
                           ID="{Binding ID}"
                           UserOperate="{Binding DataContext.FileOperateCommand,RelativeSource={RelativeSource AncestorType=Window}}">
            <lci:MarkImageInfo.ImageUrl>
                <MultiBinding Converter="{StaticResource TextToUriConverter}">
                    <Binding  Path="Type" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"></Binding>
                    <Binding  Path="FilePath" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"></Binding>
                </MultiBinding>
            </lci:MarkImageInfo.ImageUrl>
        </lci:MarkImageInfo>
    </DataTemplate>

    <Style x:Key="FileCountTextStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Font.Second}"/>
    </Style>
    
</ResourceDictionary>