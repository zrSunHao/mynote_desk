<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- 窗口样式 -->
    <Style x:Key="MainWindowStyle" TargetType="Window">
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="MinHeight" Value="768"/>
        <Setter Property="MinWidth" Value="1024"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="{DynamicResource Color.Windows.Background}"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Title" Value="我的笔记"/>
    </Style>

    <!-- Logo样式 -->
    <Style x:Key="LogoImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Stretch" Value="UniformToFill"/>
        <Setter Property="Source" Value="/Assets/Images/Icons/windmill.png"/>
    </Style>

    <!-- 窗口操作按钮排版 -->
    <Style x:Key="WindownButtonPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="4,0,0,4"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!-- 窗口操作按钮样式 -->
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Font.Tertiary}"/>
        <Setter Property="FontFamily" Value="{StaticResource Font.MaterialIcon}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource Color.Font.Tertiary}"/>
                            <Setter Property="Background" Value="{StaticResource Color.Primary}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 窗口大小调整按钮 -->
    <Style x:Key="WindowRestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Setter Property="Content" Value="&#xe5d0;"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="Content" Value="&#xe5d1;"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 窗口关闭按钮 -->
    <Style x:Key="WindowCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsMouseCaptured" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Color.Error}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Color.Error}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 窗口拖动 -->
    <Style x:Key="TopNavPolygonStyle" TargetType="Polygon">
        <Setter Property="Margin" Value="40,0,100,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Fill" Value="{StaticResource Color.Canvas.Background}"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <!-- 窗口拖动 -->
    <Style x:Key="TopNavRectangleStyle" TargetType="Rectangle">
        <Setter Property="Margin" Value="50,0,110,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Fill" Value="{StaticResource Color.Canvas.Background}"/>
    </Style>

    
    
    <Style x:Key="MenuRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Margin" Value="-1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontFamily" Value="{StaticResource Font.MaterialIcon}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Font.Primary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="{TemplateBinding Background}" 
                          Height="{TemplateBinding Height}" 
                          Width="{TemplateBinding Width}">
                        <Rectangle x:Name="indicator"
                                   Width="4"
                                   Fill="{StaticResource Color.Primary}"
                                   Visibility="Collapsed"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Stretch"/>
                        <ContentPresenter x:Name="content" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="indicator" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="{StaticResource Color.Primary}"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="indicator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="indicator" Property="Fill" Value="{StaticResource Color.Second}"/>
                            <Setter Property="Foreground" Value="{StaticResource Color.Second}"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#424242"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="MenuItemsDataTemplate">
        <RadioButton Content="{Binding Icon}" 
                     GroupName="MenuGroup"
                     Style="{StaticResource MenuRadioButtonStyle}"
                     IsChecked="{Binding Checked,UpdateSourceTrigger=PropertyChanged}"
                     IsEnabled="{Binding IsEnable}"
                     Command="{Binding DataContext.MenuCommand,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                     CommandParameter="{Binding}">
            <RadioButton.ToolTip>
                <ToolTip Placement="Right" Background="{StaticResource Color.Canvas.Background}">
                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource Color.Font.Primary}"/>
                </ToolTip>
            </RadioButton.ToolTip>
        </RadioButton>
    </DataTemplate>

    <Style x:Key="MenuItemsStyle" TargetType="ItemsControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemTemplate" Value="{StaticResource MenuItemsDataTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainFrameStyle" TargetType="Frame">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="NavigationUIVisibility" Value="Hidden"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Margin" Value="5,5,0,0"/>-->
    </Style>
    
</ResourceDictionary>